import { useEffect, useState } from "react";\nimport { Button } from "@/components/ui/button";\nimport { Input } from "@/components/ui/input";\nimport { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";\nimport { Save, Eye, Palette } from "lucide-react";\nimport axios from "axios";\nimport { API } from "@/App";\nimport { toast } from "sonner";\n\nconst ThemeCustomizer = () => {\n  const [theme, setTheme] = useState({\n    primary_color: "#3B82F6",\n    secondary_color: "#1E40AF",\n    accent_color: "#F59E0B",\n    font_heading: "Inter",\n    font_body: "Inter"\n  });\n\n  useEffect(() => {\n    fetchTheme();\n  }, []);\n\n  const fetchTheme = async () => {\n    try {\n      const response = await axios.get(`${API}/theme-settings`);\n      setTheme(response.data);\n    } catch (error) {\n      console.error("Erro ao carregar tema");\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      await axios.put(`${API}/admin/theme-settings`, theme);\n      toast.success("Tema atualizado! Recarregue a p\u00e1gina para ver as mudan\u00e7as.");\n    } catch (error) {\n      toast.error("Erro ao salvar tema");\n    }\n  };\n\n  return (\n    <div>\n      <div className="mb-8">\n        <h1 className="text-3xl font-bold mb-2">Theme Customizer</h1>\n        <p className="text-gray-600">Personalize as cores e tipografia do seu site</p>\n      </div>\n\n      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">\n        {/* Editor */}\n        <div className="lg:col-span-2 space-y-6">\n          <Card>\n            <CardHeader>\n              <CardTitle className="flex items-center">\n                <Palette className="mr-2 h-5 w-5" />\n                Cores\n              </CardTitle>\n            </CardHeader>\n            <CardContent className="space-y-4">\n              <div>\n                <label className="block text-sm font-medium mb-2">Cor Prim\u00e1ria</label>\n                <div className="flex gap-2">\n                  <input\n                    type="color"\n                    value={theme.primary_color}\n                    onChange={(e) => setTheme({...theme, primary_color: e.target.value})}\n                    className="h-10 w-20 rounded border cursor-pointer"\n                  />\n                  <Input\n                    value={theme.primary_color}\n                    onChange={(e) => setTheme({...theme, primary_color: e.target.value})}\n                    placeholder="#3B82F6"\n                  />\n                </div>\n                <div className="mt-2 h-12 rounded" style={{backgroundColor: theme.primary_color}} />\n              </div>\n\n              <div>\n                <label className="block text-sm font-medium mb-2">Cor Secund\u00e1ria</label>\n                <div className="flex gap-2">\n                  <input\n                    type="color"\n                    value={theme.secondary_color}\n                    onChange={(e) => setTheme({...theme, secondary_color: e.target.value})}\n                    className="h-10 w-20 rounded border cursor-pointer"\n                  />\n                  <Input\n                    value={theme.secondary_color}\n                    onChange={(e) => setTheme({...theme, secondary_color: e.target.value})}\n                    placeholder="#1E40AF"\n                  />\n                </div>\n                <div className="mt-2 h-12 rounded" style={{backgroundColor: theme.secondary_color}} />\n              </div>\n\n              <div>\n                <label className="block text-sm font-medium mb-2">Cor de Destaque</label>\n                <div className="flex gap-2">\n                  <input\n                    type="color"\n                    value={theme.accent_color}\n                    onChange={(e) => setTheme({...theme, accent_color: e.target.value})}\n                    className="h-10 w-20 rounded border cursor-pointer"\n                  />\n                  <Input\n                    value={theme.accent_color}\n                    onChange={(e) => setTheme({...theme, accent_color: e.target.value})}\n                    placeholder="#F59E0B"\n                  />\n                </div>\n                <div className="mt-2 h-12 rounded" style={{backgroundColor: theme.accent_color}} />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Tipografia</CardTitle>\n            </CardHeader>\n            <CardContent className="space-y-4">\n              <div>\n                <label className="block text-sm font-medium mb-2">Fonte para T\u00edtulos</label>\n                <select\n                  className="w-full p-2 border rounded"\n                  value={theme.font_heading}\n                  onChange={(e) => setTheme({...theme, font_heading: e.target.value})}\n                >\n                  <option value="Inter">Inter</option>\n                  <option value="Poppins">Poppins</option>\n                  <option value="Roboto">Roboto</option>\n                  <option value="Montserrat">Montserrat</option>\n                  <option value="Open Sans">Open Sans</option>\n                </select>\n              </div>\n\n              <div>\n                <label className="block text-sm font-medium mb-2">Fonte para Corpo</label>\n                <select\n                  className="w-full p-2 border rounded"\n                  value={theme.font_body}\n                  onChange={(e) => setTheme({...theme, font_body: e.target.value})}\n                >\n                  <option value="Inter">Inter</option>\n                  <option value="Poppins">Poppins</option>\n                  <option value="Roboto">Roboto</option>\n                  <option value="Montserrat">Montserrat</option>\n                  <option value="Open Sans">Open Sans</option>\n                </select>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Button onClick={handleSave} className="w-full" size="lg">\n            <Save className="mr-2 h-5 w-5" />\n            Salvar Tema\n          </Button>\n        </div>\n\n        {/* Preview */}\n        <div>\n          <Card className="sticky top-4">\n            <CardHeader>\n              <CardTitle className="flex items-center">\n                <Eye className="mr-2 h-5 w-5" />\n                Preview\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className="space-y-4">\n                <div className="p-4 rounded" style={{backgroundColor: theme.primary_color}}>\n                  <p className="text-white font-semibold" style={{fontFamily: theme.font_heading}}>\n                    Bot\u00e3o Prim\u00e1rio\n                  </p>\n                </div>\n                <div className="p-4 rounded" style={{backgroundColor: theme.secondary_color}}>\n                  <p className="text-white font-semibold" style={{fontFamily: theme.font_heading}}>\n                    Bot\u00e3o Secund\u00e1rio\n                  </p>\n                </div>\n                <div className="p-4 rounded" style={{backgroundColor: theme.accent_color}}>\n                  <p className="text-white font-semibold" style={{fontFamily: theme.font_heading}}>\n                    Bot\u00e3o de Destaque\n                  </p>\n                </div>\n                <div className="p-4 border rounded">\n                  <h3 className="text-xl font-bold mb-2" style={{fontFamily: theme.font_heading}}>\n                    T\u00edtulo de Exemplo\n                  </h3>\n                  <p className="text-gray-600" style={{fontFamily: theme.font_body}}>\n                    Este \u00e9 um texto de exemplo usando a fonte do corpo. Veja como fica no seu site.\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeCustomizer;
